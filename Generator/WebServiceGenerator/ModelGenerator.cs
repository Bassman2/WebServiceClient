using Microsoft.CodeAnalysis;
using System.Text;

namespace WebServiceGenerator
{
    [Generator]
    public class ModelGenerator : Generator
    {
        public override void Excecute()
        {

            StringBuilder sb = new();
            sb.AppendLine("// <auto-generated />");
            sb.AppendLine();
            sb.AppendLine("namespace Test;");
            sb.AppendLine();

            Debug(sb);

            AddSource("ClassNames.g.cs", sb.ToString());
        }

        private void Debug(StringBuilder sb)
        {
            sb.AppendLine("//##############################################################");

            //         foreach (var cl in Class.GetAllClasses(tuple))

            foreach (var cl in GetAllClassesWithAttribute("WebServiceClient.Attributes.ModelAttribute"))
            {
                sb.AppendLine();
                sb.AppendLine($"// Class: {cl.NameSpace} - {cl.Name} - {cl.NameWithNameSpace}");

                foreach (var prop in cl.Properties)
                {
                    sb.AppendLine($"//   Property: {prop.TypeName} {prop.Name} {{ {(prop.HasGet ? "get; " : "")}{(prop.HasSet ? "set;" : "")} }}");
                }

                foreach (var attr in cl.Attributes)
                {
                    sb.AppendLine($"//   Attribute: {attr.Name} - {attr.NameSpace} - {attr.NameWithNameSpace}");

                    foreach (var arg in attr.ConstructorArguments)
                    {
                        sb.AppendLine($"//      {arg}");
                    }
                    foreach (var arg in attr.NamedArguments)
                    {
                        sb.AppendLine($"//      {arg}");
                    }
                }
            }
            sb.AppendLine();
            sb.AppendLine("//##############################################################");
        }
    }
}
